knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#333C59", "#543F56", "#EEEDE7", "#E7D2CC", "#7C84A4", "#EEEEf5")
df = read.csv(r"(pricing_anon.csv)", check.names=FALSE, header = TRUE)
df[df==""]<-NA
df
rownames(df) <- df$Org
df <- df[,-1]
DKK = df[which(df$Currency == 'DKK'), ]
USD = df[which(df$Currency == 'USD'), ]
NOK = df[which(df$Currency == 'NOK'), ]
cr.dkk = .13
cr.nok = .097
cr.usd = .97
E1 = (DKK[-1]*cr.dkk)
E2 = (USD[-1]*cr.usd)
E3 = (NOK[-1]*cr.nok)
prices <- rbind(E1, E2, E3)
prices
summary(t(prices))
library("ggplot2")
library("ggtext")
library("reshape2")
data <- cbind(Offering = rownames(prices), prices)
rownames(data) <- 1:nrow(data)
d1 <- data[ , -17:-14]
d2 <- melt(d1, value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
d2$Weeks <- as.numeric(as.character(d2$Weeks))
d2$mysize <- rep(.75, nrow(d2))
d2$mysize[d2$Offering=="S.S."] <- 2
d2$Organization <- rep("Other NGOs", nrow(d2))
d2$Organization[d2$Offering=="S.S."] <- "S.S."
p0 = ggplot(d2[!is.na(d2$Price), ], aes(x = Weeks, y = Price, group = Offering, size = mysize, colour = Organization)) + geom_line() + geom_point(aes(size = mysize*2)) + scale_size(range = c(0, 2), guide="none") + scale_y_continuous(labels=scales::dollar_format()) + scale_colour_manual( values = c( "S.S."= mycols[1], "Other NGOs"="darkgray" ), labels=c("Other", "**S.S.**")) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Pricing Comparison") + theme(plot.title=element_text(hjust=0.5)) +  labs(color='Prices') + scale_x_continuous(breaks = seq(0, 12, by = 2)) + theme(legend.position = c(.95,.15))
p0
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[1], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p2
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p3
fit <- lm(Price ~ Weeks, d5)
Price <- predict(fit, data.frame(Weeks = c(2:8)))
Weeks <- c(2:8)
d6 <- data.frame(Weeks, Price)
d6$label <- "Prediction Model"
ss$Weeks <- as.numeric(as.character(ss$Weeks))
p4 = ggplot(data = d6, aes( x = Weeks, y = Price)) + geom_line(size = 1.5, aes(y = Price, color = label)) + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + labs(color = "Current Pricing") + theme_classic() + scale_colour_manual( values = c( "S.S."= mycols[1], "Prediction Model"=mycols[3] ), labels=c( "Recommended", "Current" )) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Recommendations") +  theme(plot.title=element_text(hjust=0.5)) +  labs(color='Pricing') + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + theme(legend.position = c(.90,.2))
p4
library(insight)
total <- merge(d6[,-3],ss[, -1],by="Weeks", suffixes= c(".d6", ".ss"))
colnames(total) <- c("Weeks","Recommended Price", "Current Price")
total$Difference <-total$`Recommended Price` -  total$`Current Price`
total$'Percent Change' <- (total$Difference / total$`Current Price`) * 100
total$`Current Price` <- sprintf("$%.2f", total$`Current Price`)
total$`Recommended Price` <- sprintf("$%.2f", total$`Recommended Price`)
total$Difference <- sprintf("+$%.2f", total$Difference)
total$`Percent Change` <- sprintf("%1.0f%%"  , round(total$`Percent Change`))
total
export_table(total, format = "md")
cdf = read.csv(r"elasticity.csv)", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#A91B0D", "#333CCC", "#03C04A", "#EEEEf5")
library("ggplot2")
library("ggtext")
library("reshape2")
data <- cbind(Offering = rownames(prices), prices)
rownames(data) <- 1:nrow(data)
d1 <- data[ , -17:-14]
d2 <- melt(d1, value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
d2$Weeks <- as.numeric(as.character(d2$Weeks))
d2$mysize <- rep(.75, nrow(d2))
d2$mysize[d2$Offering=="S.S."] <- 2
d2$Organization <- rep("Other NGOs", nrow(d2))
d2$Organization[d2$Offering=="S.S."] <- "S.S."
p0 = ggplot(d2[!is.na(d2$Price), ], aes(x = Weeks, y = Price, group = Offering, size = mysize, colour = Organization)) + geom_line() + geom_point(aes(size = mysize*2)) + scale_size(range = c(0, 2), guide="none") + scale_y_continuous(labels=scales::dollar_format()) + scale_colour_manual( values = c( "S.S."= mycols[1], "Other NGOs"= mycols[0] ), labels=c("Other", "**S.S.**")) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Pricing Comparison") + theme(plot.title=element_text(hjust=0.5)) +  labs(color='Prices') + scale_x_continuous(breaks = seq(0, 12, by = 2)) + theme(legend.position = c(.95,.15))
p0
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#A91B0D", "#333CCC", "#03C04A", "#EEEEf5")
df = read.csv(r"(pricing_anon.csv)", check.names=FALSE, header = TRUE)
df[df==""]<-NA
df
rownames(df) <- df$Org
df <- df[,-1]
DKK = df[which(df$Currency == 'DKK'), ]
USD = df[which(df$Currency == 'USD'), ]
NOK = df[which(df$Currency == 'NOK'), ]
cr.dkk = .13
cr.nok = .097
cr.usd = .97
E1 = (DKK[-1]*cr.dkk)
E2 = (USD[-1]*cr.usd)
E3 = (NOK[-1]*cr.nok)
prices <- rbind(E1, E2, E3)
head(prices)
summary(t(prices))
library("ggplot2")
library("ggtext")
library("reshape2")
data <- cbind(Offering = rownames(prices), prices)
rownames(data) <- 1:nrow(data)
d1 <- data[ , -17:-14]
d2 <- melt(d1, value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
d2$Weeks <- as.numeric(as.character(d2$Weeks))
d2$mysize <- rep(.75, nrow(d2))
d2$mysize[d2$Offering=="S.S."] <- 2
d2$Organization <- rep("Other NGOs", nrow(d2))
d2$Organization[d2$Offering=="S.S."] <- "S.S."
p0 = ggplot(d2[!is.na(d2$Price), ], aes(x = Weeks, y = Price, group = Offering, size = mysize, colour = Organization)) + geom_line() + geom_point(aes(size = mysize*2)) + scale_size(range = c(0, 2), guide="none") + scale_y_continuous(labels=scales::dollar_format()) + scale_colour_manual( values = c( "S.S."= mycols[1], "Other NGOs"= mycols[0] ), labels=c("Other", "**S.S.**")) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Pricing Comparison") + theme(plot.title=element_text(hjust=0.5)) +  labs(color='Prices') + scale_x_continuous(breaks = seq(0, 12, by = 2)) + theme(legend.position = c(.95,.15))
p0
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[1], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p2
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p3
fit <- lm(Price ~ Weeks, d5)
Price <- predict(fit, data.frame(Weeks = c(2:8)))
Weeks <- c(2:8)
d6 <- data.frame(Weeks, Price)
d6$label <- "Prediction Model"
ss$Weeks <- as.numeric(as.character(ss$Weeks))
p4 = ggplot(data = d6, aes( x = Weeks, y = Price)) + geom_line(size = 1.5, aes(y = Price, color = label)) + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + labs(color = "Current Pricing") + theme_classic() + scale_colour_manual( values = c( "S.S."= mycols[1], "Prediction Model"=mycols[3] ), labels=c( "Recommended", "Current" )) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Recommendations") +  theme(plot.title=element_text(hjust=0.5)) +  labs(color='Pricing') + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + theme(legend.position = c(.90,.2))
p4
library(insight)
total <- merge(d6[,-3],ss[, -1],by="Weeks", suffixes= c(".d6", ".ss"))
colnames(total) <- c("Weeks","Recommended Price", "Current Price")
total$Difference <-total$`Recommended Price` -  total$`Current Price`
total$'Percent Change' <- (total$Difference / total$`Current Price`) * 100
total$`Current Price` <- sprintf("$%.2f", total$`Current Price`)
total$`Recommended Price` <- sprintf("$%.2f", total$`Recommended Price`)
total$Difference <- sprintf("+$%.2f", total$Difference)
total$`Percent Change` <- sprintf("%1.0f%%"  , round(total$`Percent Change`))
total
export_table(total, format = "md")
cdf = read.csv(r"elasticity.csv)", header = TRUE)
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p3
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[3])
p3
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[4])
p3
fit <- lm(Price ~ Weeks, d5)
Price <- predict(fit, data.frame(Weeks = c(2:8)))
Weeks <- c(2:8)
d6 <- data.frame(Weeks, Price)
d6$label <- "Prediction Model"
ss$Weeks <- as.numeric(as.character(ss$Weeks))
p4 = ggplot(data = d6, aes( x = Weeks, y = Price)) + geom_line(size = 1.5, aes(y = Price, color = label)) + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + labs(color = "Current Pricing") + theme_classic() + scale_colour_manual( values = c( "S.S."= mycols[2], "Prediction Model"=mycols[4] ), labels=c( "Recommended", "Current" )) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Recommendations") +  theme(plot.title=element_text(hjust=0.5)) +  labs(color='Pricing') + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + theme(legend.position = c(.90,.2))
p4
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[2], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[1])
p2
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[2], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[2])
p2
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#D30000", "#333CCC", "#03C04A", "#EEEEf5")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#D30000", "#333CCC", "#03C04A", "#EEEEf5")
df = read.csv(r"(pricing_anon.csv)", check.names=FALSE, header = TRUE)
df[df==""]<-NA
df
rownames(df) <- df$Org
df <- df[,-1]
DKK = df[which(df$Currency == 'DKK'), ]
USD = df[which(df$Currency == 'USD'), ]
NOK = df[which(df$Currency == 'NOK'), ]
cr.dkk = .13
cr.nok = .097
cr.usd = .97
E1 = (DKK[-1]*cr.dkk)
E2 = (USD[-1]*cr.usd)
E3 = (NOK[-1]*cr.nok)
prices <- rbind(E1, E2, E3)
head(prices)
summary(t(prices))
library("ggplot2")
library("ggtext")
library("reshape2")
data <- cbind(Offering = rownames(prices), prices)
rownames(data) <- 1:nrow(data)
d1 <- data[ , -17:-14]
d2 <- melt(d1, value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
d2$Weeks <- as.numeric(as.character(d2$Weeks))
d2$mysize <- rep(.75, nrow(d2))
d2$mysize[d2$Offering=="S.S."] <- 2
d2$Organization <- rep("Other NGOs", nrow(d2))
d2$Organization[d2$Offering=="S.S."] <- "S.S."
p0 = ggplot(d2[!is.na(d2$Price), ], aes(x = Weeks, y = Price, group = Offering, size = mysize, colour = Organization)) + geom_line() + geom_point(aes(size = mysize*2)) + scale_size(range = c(0, 2), guide="none") + scale_y_continuous(labels=scales::dollar_format()) + scale_colour_manual( values = c( "S.S."= mycols[2], "Other NGOs"= mycols[1] ), labels=c("Other", "**S.S.**")) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Pricing Comparison") + theme(plot.title=element_text(hjust=0.5)) +  labs(color='Prices') + scale_x_continuous(breaks = seq(0, 12, by = 2)) + theme(legend.position = c(.95,.15))
p0
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[2], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[2])
p2
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[4])
p3
fit <- lm(Price ~ Weeks, d5)
Price <- predict(fit, data.frame(Weeks = c(2:8)))
Weeks <- c(2:8)
d6 <- data.frame(Weeks, Price)
d6$label <- "Prediction Model"
ss$Weeks <- as.numeric(as.character(ss$Weeks))
p4 = ggplot(data = d6, aes( x = Weeks, y = Price)) + geom_line(size = 1.5, aes(y = Price, color = label)) + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + labs(color = "Current Pricing") + theme_classic() + scale_colour_manual( values = c( "S.S."= mycols[2], "Prediction Model"=mycols[4] ), labels=c( "Recommended", "Current" )) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Recommendations") +  theme(plot.title=element_text(hjust=0.5)) +  labs(color='Pricing') + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + theme(legend.position = c(.90,.2))
p4
library(insight)
total <- merge(d6[,-3],ss[, -1],by="Weeks", suffixes= c(".d6", ".ss"))
colnames(total) <- c("Weeks","Recommended Price", "Current Price")
total$Difference <-total$`Recommended Price` -  total$`Current Price`
total$'Percent Change' <- (total$Difference / total$`Current Price`) * 100
total$`Current Price` <- sprintf("$%.2f", total$`Current Price`)
total$`Recommended Price` <- sprintf("$%.2f", total$`Recommended Price`)
total$Difference <- sprintf("+$%.2f", total$Difference)
total$`Percent Change` <- sprintf("%1.0f%%"  , round(total$`Percent Change`))
total
export_table(total, format = "md")
cdf = read.csv("elasticity.csv)", header = TRUE)
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[3])
p3
library(insight)
total <- merge(d6[,-3],ss[, -1],by="Weeks", suffixes= c(".d6", ".ss"))
colnames(total) <- c("Weeks","Recommended Price", "Current Price")
total$Difference <-total$`Recommended Price` -  total$`Current Price`
total$'Percent Change' <- (total$Difference / total$`Current Price`) * 100
total$`Current Price` <- sprintf("$%.2f", total$`Current Price`)
total$`Recommended Price` <- sprintf("$%.2f", total$`Recommended Price`)
total$Difference <- sprintf("+$%.2f", total$Difference)
total$`Percent Change` <- sprintf("%1.0f%%"  , round(total$`Percent Change`))
export_table(total, format = "md")
cdf = read.csv("elasticity.csv)", header = TRUE)
cdf = read.csv("elasticity.csv)", header = TRUE)
cdf = read.csv("elasticity.csv"), header = TRUE)
cdf = read.csv("elasticity.csv", header = TRUE)
cdf
# install.packages("corrgram")
library(corrgram)
corrgram(cdf,
order = TRUE,              # If TRUE, PCA-based re-ordering
upper.panel = panel.pie,   # Panel function above diagonal
lower.panel = panel.shade, # Panel function below diagonal
text.panel = panel.txt,    # Panel function of the diagonal
main = "Correlations",
)      # Main title
# Function to add histograms
panel.hist <- function(x, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5))
his <- hist(x, plot = FALSE)
breaks <- his$breaks
nB <- length(breaks)
y <- his$counts
y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = mycols[1], ...)
# lines(density(x), col = 2, lwd = 2) # Uncomment to add density lines
}
# Creating the scatter plot matrix
pairs(cdf,
upper.panel = NULL,         # Disabling the upper panel
diag.panel = panel.hist, main = "Correlations")    # Adding the histograms
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
mycols <- c("#8D879D", "#D30000", "#333CCC", "#03C04A", "#EEEEf5")
df = read.csv(r"(pricing_anon.csv)", check.names=FALSE, header = TRUE)
df[df==""]<-NA
df
rownames(df) <- df$Org
df <- df[,-1]
DKK = df[which(df$Currency == 'DKK'), ]
USD = df[which(df$Currency == 'USD'), ]
NOK = df[which(df$Currency == 'NOK'), ]
cr.dkk = .13
cr.nok = .097
cr.usd = .97
E1 = (DKK[-1]*cr.dkk)
E2 = (USD[-1]*cr.usd)
E3 = (NOK[-1]*cr.nok)
prices <- rbind(E1, E2, E3)
head(prices)
summary(t(prices))
library("ggplot2")
library("ggtext")
library("reshape2")
data <- cbind(Offering = rownames(prices), prices)
rownames(data) <- 1:nrow(data)
d1 <- data[ , -17:-14]
d2 <- melt(d1, value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
d2$Weeks <- as.numeric(as.character(d2$Weeks))
d2$mysize <- rep(.75, nrow(d2))
d2$mysize[d2$Offering=="S.S."] <- 2
d2$Organization <- rep("Other NGOs", nrow(d2))
d2$Organization[d2$Offering=="S.S."] <- "S.S."
p0 = ggplot(d2[!is.na(d2$Price), ], aes(x = Weeks, y = Price, group = Offering, size = mysize, colour = Organization)) + geom_line() + geom_point(aes(size = mysize*2)) + scale_size(range = c(0, 2), guide="none") + scale_y_continuous(labels=scales::dollar_format()) + scale_colour_manual( values = c( "S.S."= mycols[2], "Other NGOs"= mycols[1] ), labels=c("Other", "**S.S.**")) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Pricing Comparison") + theme(plot.title=element_text(hjust=0.5)) +  labs(color='Prices') + scale_x_continuous(breaks = seq(0, 12, by = 2)) + theme(legend.position = c(.95,.15))
p0
d3 <- melt((d1[(d1$Offering != 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
med <- aggregate(Price~Weeks, d3, median)
d4 = d3[!is.na(d3$Price), ]
p1 = ggplot(d4, aes(x = Weeks, y = Price)) +  geom_boxplot() + labs(color='Weeks')  + labs(x="Duration (weeks)", y="Price (€)")  + scale_fill_grey(start = 0.3, end = 0.7)   +theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + geom_text(data = med, aes(y = Price, label = paste0("$", round(Price,0))), size = 4, vjust = -0.5, color='black') + theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ss = melt((d1[(d1$Offering == 'S.S.') , -2])[ , -9:-12], value.name = "Price", id.vars = 'Offering', variable.name = 'Weeks', )
p2 = p1 + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + geom_point(data = ss, colour = mycols[2], shape = 1) + labs(color = "Current Pricing") + ggtitle("Competitor Pricing Distribution") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.98,.2)) + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[2])
p2
library(ggpmisc)
d4$Weeks <- as.numeric(as.character(d4$Weeks))
d5 = d4[d4$Weeks != 2, ]
p3 = ggplot(data = d5, aes(Weeks, Price)) + stat_poly_line(aes(color = 'Best Fit')) + stat_poly_eq(aes(label = paste(after_stat(eq.label), after_stat(rr.label), sep = "*\", \"*"))) + geom_point() +  theme_classic() + ggtitle("Linear Regression Model") +  theme(plot.title=element_text(hjust=0.5)) + theme(legend.position = c(.90,.2)) + labs(color = "Regression Line")  + ylab("Price (€)") + xlab("Duration (weeks)")+ scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + scale_color_manual(values=mycols[3])
p3
fit <- lm(Price ~ Weeks, d5)
Price <- predict(fit, data.frame(Weeks = c(2:8)))
Weeks <- c(2:8)
d6 <- data.frame(Weeks, Price)
d6$label <- "Prediction Model"
ss$Weeks <- as.numeric(as.character(ss$Weeks))
p4 = ggplot(data = d6, aes( x = Weeks, y = Price)) + geom_line(size = 1.5, aes(y = Price, color = label)) + geom_line(data = ss, group = 1 , size = 1.5, aes( y = Price, color = Offering)) + labs(color = "Current Pricing") + theme_classic() + scale_colour_manual( values = c( "S.S."= mycols[2], "Prediction Model"=mycols[4] ), labels=c( "Recommended", "Current" )) + theme(legend.key.size = unit(2,"line")) + theme_classic()  + theme(legend.text = element_markdown()) + ylab("Price (€)") + xlab("Duration (weeks)") +ggtitle("Recommendations") +  theme(plot.title=element_text(hjust=0.5)) +  labs(color='Pricing') + scale_y_continuous(labels=scales::dollar_format(), limits=c(0,4000)) + theme(legend.position = c(.90,.2))
p4
library(insight)
total <- merge(d6[,-3],ss[, -1],by="Weeks", suffixes= c(".d6", ".ss"))
colnames(total) <- c("Weeks","Recommended Price", "Current Price")
total$Difference <-total$`Recommended Price` -  total$`Current Price`
total$'Percent Change' <- (total$Difference / total$`Current Price`) * 100
total$`Current Price` <- sprintf("$%.2f", total$`Current Price`)
total$`Recommended Price` <- sprintf("$%.2f", total$`Recommended Price`)
total$Difference <- sprintf("+$%.2f", total$Difference)
total$`Percent Change` <- sprintf("%1.0f%%"  , round(total$`Percent Change`))
export_table(total, format = "md")
